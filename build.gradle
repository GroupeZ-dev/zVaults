plugins {
    id 'java'
    id 'io.github.goooler.shadow' version '8.1.8'
}

def propertiesFile = file("personal.properties")

if (propertiesFile.exists()) {
    def properties = new Properties()
    propertiesFile.withInputStream { stream ->
        properties.load(stream)
    }

    properties.each { key, value ->
        project.ext[key] = value
    }
}

project.ext {
    targetFolder = file('target')
}

allprojects {

    group = 'fr.traqueur'
    version = property('version')

    apply {
        plugin 'java'
        plugin 'io.github.goooler.shadow'
    }

    repositories {
        mavenCentral()
        maven {
            name = "jitpack"
            url = 'https://jitpack.io'
        }
        maven {
            name = "spigotmc-repo"
            url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/groups/public/"
        }
        maven {
            name = "codemc-snapshots"
            url = "https://repo.codemc.io/repository/maven-snapshots/"
        }
        maven {
            url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
        }
    }

    dependencies {
        compileOnly "org.spigotmc:spigot-api:1.21.1-R0.1-SNAPSHOT"
        compileOnly "dev.dejvokep:boosted-yaml:1.3.6"
        compileOnly "net.kyori:adventure-text-minimessage:4.17.0"
        compileOnly "net.kyori:adventure-api:4.17.0"
        compileOnly "net.kyori:adventure-platform-bukkit:4.3.4"

        implementation 'com.github.Maxlego08:Sarah:1.12.2'
        implementation "com.github.technicallycoded:FoliaLib:main-SNAPSHOT"
        implementation "com.github.Traqueur-dev:CommandsAPI:2.0.0"
        implementation "net.wesjd:anvilgui:1.10.2-SNAPSHOT"
        implementation "org.bstats:bstats-bukkit:3.0.2"

        compileOnly 'com.github.Maxlego08:zMenu-API:303d4e9178'
    }
}

dependencies {
    implementation(project(':API'))
    rootProject.subprojects.findAll { it.path.startsWith(':Hooks:') }.each { subproject ->
        implementation project(subproject.path)
    }
    implementation(project(':Distributed'))
    implementation(project(':Converters'))
}

shadowJar {
    dependsOn(jar)

    relocate 'net.wesjd.anvilgui', 'fr.traqueur.vaults.api.anvilgui'
    relocate 'fr.maxlego08.sarah', "fr.traqueur.vaults.api.orm"
    relocate 'fr.traqueur.commands', 'fr.traqueur.vaults.api.commands'
    relocate 'com.tcoded.folialib', 'fr.traqueur.vaults.api.platform.folia'
    relocate 'org.bstats', 'fr.traqueur.vaults.api.bstats'

    archiveFileName = rootProject.name + "-" + rootProject.version + ".jar"
    destinationDirectory = rootProject.targetFolder
}

tasks.register('copyFiles', Copy) {
    from "${rootProject.targetFolder}"
    into rootProject.testFolder
}

if(propertiesFile.exists()) {
    shadowJar.finalizedBy('copyFiles')
} else {
    println "No personal.properties file found, skipping copyFiles task"
}

build.finalizedBy(shadowJar)
build.shouldRunAfter subprojects.build

shadowJar.dependsOn subprojects.build
compileJava.dependsOn childProjects.values().shadowJar

processResources {
    def props = [version: version,
                 main_config_version: main_config_version,
                 lang_settings_config_version: lang_settings_config_version,
                 lang_config_version: lang_config_version,
                 vaults_config_version: vaults_config_version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('**/*.yml') {
        expand props
    }
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}
